{"ast":null,"code":"var _jsxFileName = \"/Users/Jason/Lambda-Files/BW/Front-End/src/components/forms/NewBoard.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from 'styled-components';\nconst Form = styled.div`\ndisplay:flex;\nflex-direction: column;\nalign-items:center;\n`;\n\nconst SignUp = () => {\n  const {\n    handleSubmit,\n    register,\n    errors\n  } = useForm([]);\n\n  const onSubmit = (data, e) => {\n    console.log(data);\n    e.target.reset();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Board Name\"), React.createElement(\"input\", {\n    name: \"boardname\",\n    placeholder: \"Board Name\",\n    ref: register({\n      required: true,\n      minLength: 2\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), errors.username && errors.username.type === 'required' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"This field is required\"), errors.username && errors.username.type === 'minLength' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"This field needs to be at least 2 characters long\"), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/Jason/Lambda-Files/BW/Front-End/src/components/forms/NewBoard.js"],"names":["React","useForm","styled","Form","div","SignUp","handleSubmit","register","errors","onSubmit","data","e","console","log","target","reset","required","minLength","username","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,IAAI,GAAGD,MAAM,CAACE,GAAI;;;;CAAxB;;AAMA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAqCP,OAAO,CAAC,EAAD,CAAlD;;AACA,QAAMQ,QAAQ,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAC,IAAAA,CAAC,CAACG,MAAF,CAASC,KAAT;AAED,GAJD;;AAMA,SAEE;AAAM,IAAA,QAAQ,EAAET,YAAY,CAACG,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,WAAW,EAAC,YAFhB;AAGI,IAAA,GAAG,EAAEF,QAAQ,CAAC;AAAES,MAAAA,QAAQ,EAAE,IAAZ;AACdC,MAAAA,SAAS,EAAE;AADG,KAAD,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQKT,MAAM,CAACU,QAAP,IAAmBV,MAAM,CAACU,QAAP,CAAgBC,IAAhB,KAAyB,UAA5C,IAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAR/D,EAUKX,MAAM,CAACU,QAAP,IAAmBV,MAAM,CAACU,QAAP,CAAgBC,IAAhB,KAAyB,WAA5C,IAA2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAVhE,EAaJ;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbI,CADA,CAFF;AAqBD,CA7BD;;AA8BA,eAAed,MAAf","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from 'styled-components'\n\nconst Form = styled.div`\ndisplay:flex;\nflex-direction: column;\nalign-items:center;\n`\n\nconst SignUp = () => {\n  const { handleSubmit, register, errors } = useForm([]);\n  const onSubmit = (data, e) => {\n    console.log(data);\n    e.target.reset()\n\n  };\n\n  return (\n      \n    <form onSubmit={handleSubmit(onSubmit)}>\n    <Form>\n        <label>Board Name</label>\n        <input\n            name=\"boardname\"\n            placeholder=\"Board Name\"\n            ref={register({ required: true,\n            minLength: 2 })}\n        />\n        {errors.username && errors.username.type === 'required' && <p>This field is required</p>\n        }\n        {errors.username && errors.username.type === 'minLength' && <p>This field needs to be at least 2 characters long</p>\n        }\n\n<button type=\"submit\">Submit</button>\n      </Form>\n\n    </form>\n  );\n};\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}
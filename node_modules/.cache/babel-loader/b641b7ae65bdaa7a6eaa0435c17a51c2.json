{"ast":null,"code":"var _jsxFileName = \"/Users/Jason/Lambda-Files/BW/Front-End/src/components/forms/SignUp.js\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from 'styled-components';\nconst Form = styled.div`\ndisplay:flex;\nflex-direction: column;\nalign-items:center;\n`;\n\nconst SignUp = () => {\n  const [userData, setUserData] = useState([]);\n\n  const onSubmit = (data, e) => {\n    // console.log(data);\n    e.target.reset();\n    setUserData(data);\n    console.log(userData);\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"User Name\"), React.createElement(\"input\", {\n    name: \"username\",\n    placeholder: \"Username\",\n    ref: register({\n      required: true,\n      minLength: 2\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), errors.username && errors.username.type === 'required' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"This field is required\"), errors.username && errors.username.type === 'minLength' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"This field needs to be at least 2 characters long\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    name: \"email\",\n    placeholder: \"Email\",\n    ref: register({\n      required: true,\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"invalid email address\"\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), errors.email && errors.email.type === 'required' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"This field is required\"), errors.email && errors.email.message, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: true,\n      minLength: 6\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), errors.password && errors.password.type === 'required' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"This field is required\"), errors.password && errors.password.type === 'minLength' && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"This field needs to be at least 6 characters long\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    name: \"fName\",\n    placeholder: \"First Name\",\n    ref: register({\n      required: false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    name: \"lName\",\n    placeholder: \"Last Name\",\n    ref: register({\n      required: false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Field of Study\"), React.createElement(\"input\", {\n    name: \"study\",\n    placeholder: \"Field of Study\",\n    ref: register({\n      required: false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Occupation\"), React.createElement(\"input\", {\n    name: \"occupation\",\n    placeholder: \"Occupation\",\n    ref: register({\n      required: false\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["/Users/Jason/Lambda-Files/BW/Front-End/src/components/forms/SignUp.js"],"names":["React","useState","useForm","styled","Form","div","SignUp","userData","setUserData","onSubmit","data","e","target","reset","console","log","handleSubmit","register","required","minLength","errors","username","type","pattern","value","message","email","password"],"mappings":"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","sourcesContent":["import React, { useState} from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport styled from 'styled-components'\n\nconst Form = styled.div`\ndisplay:flex;\nflex-direction: column;\nalign-items:center;\n`\nconst SignUp = () => {\n  const [userData, setUserData] = useState([])\n\n  const onSubmit = (data, e) => {\n    // console.log(data);\n    e.target.reset();\n    setUserData(data)\nconsole.log(userData)\n  };\n\n  return (\n\n    <form onSubmit={handleSubmit(onSubmit)}>\n    <Form>\n        <label>User Name</label>\n        <input\n            name=\"username\"\n            placeholder=\"Username\"\n            ref={register({ required: true,\n            minLength: 2 })}\n        />\n        {errors.username && errors.username.type === 'required' && <p>This field is required</p>\n        }\n        {errors.username && errors.username.type === 'minLength' && <p>This field needs to be at least 2 characters long</p>\n        }\n\n        <label>Email</label>\n        <input\n            name=\"email\"\n            placeholder=\"Email\"\n            ref={register({ \n                required: true,\n                pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                    message: \"invalid email address\"\n                  } })}\n        />\n        {errors.email && errors.email.type === 'required' && <p>This field is required</p>\n        }\n        {errors.email && errors.email.message}\n\n        <label>Password</label>\n        <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            ref={register({ required: true, minLength: 6 })}\n        />\n        {errors.password && errors.password.type === 'required' && <p>This field is required</p>\n        }\n        {errors.password && errors.password.type === 'minLength' && <p>This field needs to be at least 6 characters long</p>\n        }\n\n        <label>First Name</label>\n        <input\n            name=\"fName\"\n            placeholder=\"First Name\"\n            ref={register({ required: false })}\n        />\n        \n        <label>Last Name</label>\n        <input\n            name=\"lName\"\n            placeholder=\"Last Name\"\n            ref={register({ required: false })}\n        />\n\n        <label>Field of Study</label>\n        <input\n            name=\"study\"\n            placeholder=\"Field of Study\"\n            ref={register({ required: false })}\n        />\n\n        <label>Occupation</label>\n        <input\n            name=\"occupation\"\n            placeholder=\"Occupation\"\n            ref={register({ required: false })}\n        />\n\n<button type=\"submit\">Submit</button>\n      </Form>\n\n    </form>\n  );\n};\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}